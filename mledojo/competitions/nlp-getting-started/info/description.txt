Welcome to one of our "Getting Started" competitions üëã This particular challenge is perfect for data scientists looking to get started with Natural Language Processing. The competition dataset is not too big, and even if you don‚Äôt have much personal computing power, you can do all of the work in our free, no-setup, Jupyter Notebooks environment called Kaggle Notebooks.

If you want to talk with other users about this competition, come join our Discord! We've got channels for competitions, job postings and career discussions, resources, and socializing with your fellow data scientists. Follow the link here: https://discord.gg/kaggle

Twitter has become an important communication channel in times of emergency. The ubiquitousness of smartphones enables people to announce an emergency they‚Äôre observing in real-time. Because of this, more agencies are interested in programmatically monitoring Twitter (i.e. disaster relief organizations and news agencies). But, it‚Äôs not always clear whether a person‚Äôs words are actually announcing a disaster. Take this example:

The author explicitly uses the word ‚ÄúABLAZE‚Äù but means it metaphorically. This is clear to a human right away, especially with the visual aid. But it‚Äôs less clear to a machine.

In this competition, you‚Äôre challenged to build a machine learning model that predicts which Tweets are about real disasters and which ones aren‚Äôt. You‚Äôll have access to a dataset of 10,000 tweets that were hand classified. If this is your first time working on an NLP problem, we've created a quick tutorial to get you up and running.

Disclaimer: The dataset for this competition contains text that may be considered profane, vulgar, or offensive.

üí°Getting Started Notebook

To get started quickly, feel free to take advantage of this starter notebook.

Acknowledgments

This dataset was created by the company figure-eight and originally shared on their ‚ÄòData For Everyone‚Äô website here. Tweet source: https://twitter.com/AnyOtherAnnaK/status/629195955506708480

Submissions are evaluated using F1 between the predicted and expected answers. F1 is calculated as follows:

\[ F_1 = 2 \times \frac{\text{precision} \times \text{recall}}{\text{precision} + \text{recall}} \]

where:

\[
\text{precision} = \frac{\text{TP}}{\text{TP} + \text{FP}}
\]

\[
\text{recall} = \frac{\text{TP}}{\text{TP} + \text{FN}}
\]

and:

True Positive (TP) = your prediction is 1, and the ground truth is also 1 - you predicted a positive and that's true!

False Positive (FP) = your prediction is 1, and the ground truth is 0 - you predicted a positive, and that's false.

False Negative (FN) = your prediction is 0, and the ground truth is 1 - you predicted a negative, and that's false.

For each ID in the test set, you must predict 1 if the tweet is describing a real disaster, and 0 otherwise. The file should contain a header and have the following format:

```
id,target
0,0
2,0
3,1
9,0
11,0
```

What files do I need?
You'll need train.csv, test.csv, and sample_submission.csv.

What should I expect the data format to be?
Each sample in the train and test set has the following information:
- The text of a tweet
- A keyword from that tweet (although this may be blank!)
- The location the tweet was sent from (may also be blank)

What am I predicting?
You are predicting whether a given tweet is about a real disaster or not. If so, predict a 1. If not, predict a 0.

Files:
- train.csv - the training set
- test.csv - the test set
- sample_submission.csv - a sample submission file in the correct format

Columns:
- id - a unique identifier for each tweet
- text - the text of the tweet
- location - the location the tweet was sent from (may be blank)
- keyword - a particular keyword from the tweet (may be blank)
- target - in train.csv only, this denotes whether a tweet is about a real disaster (1) or not (0)