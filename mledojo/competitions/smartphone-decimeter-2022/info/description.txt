### Description

The Smartphone Decimeter Challenge aims to enhance smartphone location accuracy to decimeter or even centimeter levels, enabling advanced services like HOV lane ETA estimation. Participants will develop models using raw location data from Android smartphones collected on open sky and light urban roads, provided by the host. This initiative seeks to bridge the gap between geospatial data and mobile internet, paving the way for innovative navigation methods based on precise positioning.

In today's world, accurate smartphone positioning is crucial for features like lane change alerts and ETA predictions for specific lanes. Current GNSS technology offers only 3-5 meters of accuracy, which is insufficient for advanced applications. Urban environments pose significant challenges to GPS accuracy, making this competition's focus on open sky and light urban road data particularly relevant. Building on the success of the previous year's challenge, this competition continues to push the boundaries of smartphone GNSS positioning research, with the potential for future challenges to include more complex environments.

### Evaluation

Submissions are scored on the mean of the 50th and 95th percentile distance errors. For every phone and once per second, the horizontal distance (in meters) is computed between the predicted latitude/longitude and the ground truth latitude/longitude. These distance errors form a distribution from which the 50th and 95th percentile errors are calculated (i.e. the 95th percentile error is the value, in meters, for which 95% of the distance errors are smaller). The 50th and 95th percentile errors are then averaged for each phone. Lastly, the mean of these averaged values is calculated across all phones in the test set.

## Submission File

For each phone and UnixTimeMillis in the sample submission, you must predict the latitude and longitude. The sample submission typically requires a prediction once per second but may include larger gaps if there were too few valid GNSS signals. The submission file should contain a header and have the following format:

```
tripId,UnixTimeMillis,LatitudeDegrees,LongitudeDegrees
2020-05-15-US-MTV-1_Pixel4,1273608785432,37.904611315634504,-86.48107806249548
2020-05-15-US-MTV-1_Pixel4,1273608786432,37.904611315634504,-86.48107806249548
2020-05-15-US-MTV-1_Pixel4,1273608787432,37.904611315634504,-86.48107806249548
```

## Dataset Description

This challenge provides data from various instruments essential for determining a phone's position, including GPS signals, accelerometer, and gyroscope readings. Compared to last year's competition, this dataset features more comprehensive data, a broader range of routes, and only one phone per drive in the test set. The design focuses on post-processing applications like lane-level mapping, and in-phone GPS chipset locations will not be provided to encourage the development of a general GNSS positioning algorithm.

## Files

[train/test]/[drive_id]/[phone_name]/supplemental/[phone_name][.20o/.21o/.22o/.nmea] - Equivalent data to the gnss logs in other formats used by the GPS community.

train/[drive_id]/[phone_name]/ground_truth.csv - Reference locations at expected timestamps.

- MessageType - "Fix", the prefix of sentence.
- Provider - "GT", short for ground truth.
- [Latitude/Longitude]Degrees - The WGS84 latitude, longitude (in decimal degrees) estimated by the reference GNSS receiver (NovAtel SPAN). When extracting from the NMEA file, linear interpolation has been applied to align the location to the expected non-integer timestamps.
- AltitudeMeters - The height above the WGS84 ellipsoid (in meters) estimated by the reference GNSS receiver.
- SpeedMps* - The speed over ground in meters per second.
- AccuracyMeters - The estimated horizontal accuracy radius in meters of this location at the 68th percentile confidence level. This means that there is a 68% chance that the true location of the device is within a distance of this uncertainty of the reported location.
- BearingDegrees - Bearing is measured in degrees clockwise from north. It ranges from 0 to 359.999 degrees.
- UnixTimeMillis - An integer number of milliseconds since the GPS epoch (1970/1/1 midnight UTC). Converted from GnssClock.

[train/test]/[drive_id]/[phone_name]/device_gnss.csv - Each row contains raw GNSS measurements, derived values, and a baseline estimated location. This baseline was computed using correctedPrM and the satellite positions, using a standard Weighted Least Squares (WLS) solver, with the phone's position (x, y, z), clock bias (t), and isrbM for each unique signal type as states for each epoch. Some of the raw measurement fields are not included in this file because they are deprecated or are not populated in the original gnss_log.txt.

- MessageType - "Raw", the prefix of sentence.
- utcTimeMillis - Milliseconds since UTC epoch (1970/1/1), converted from GnssClock.
- TimeNanos - The GNSS receiver internal hardware clock value in nanoseconds.
- LeapSecond - The leap second associated with the clock's time.
- FullBiasNanos - The difference between hardware clock (getTimeNanos()) inside GPS receiver and the true GPS time since 0000Z, January 6, 1980, in nanoseconds.
- BiasNanos - The clock's sub-nanosecond bias.
- BiasUncertaintyNanos - The clock's bias uncertainty (1-sigma) in nanoseconds.
- DriftNanosPerSecond - The clock's drift in nanoseconds per second.
- DriftUncertaintyNanosPerSecond - The clock's drift uncertainty (1-sigma) in nanoseconds per second.
- HardwareClockDiscontinuityCount - Count of hardware clock discontinuities.
- Svid - The satellite ID.
- TimeOffsetNanos - The time offset at which the measurement was taken in nanoseconds.
- State - Integer signifying sync state of the satellite. Each bit in the integer attributes to a particular state information of the measurement. See the metadata/raw_state_bit_map.json file for the mapping between bits and states.
- ReceivedSvTimeNanos - The received GNSS satellite time, at the measurement time, in nanoseconds.
- ReceivedSvTimeUncertaintyNanos - The error estimate (1-sigma) for the received GNSS time, in nanoseconds.
- Cn0DbHz - The carrier-to-noise density in dB-Hz.
- PseudorangeRateMetersPerSecond - The pseudorange rate at the timestamp in m/s.
- PseudorangeRateUncertaintyMetersPerSecond - The pseudorange's rate uncertainty (1-sigma) in m/s.
- AccumulatedDeltaRangeState - This indicates the state of the 'Accumulated Delta Range' measurement. Each bit in the integer attributes to state of the measurement. See the metadata/accumulated_delta_range_state_bit_map.json file for the mapping between bits and states.
- AccumulatedDeltaRangeMeters - The accumulated delta range since the last channel reset, in meters.
- AccumulatedDeltaRangeUncertaintyMeters - The accumulated delta range's uncertainty (1-sigma) in meters.
- CarrierFrequencyHz - The carrier frequency of the tracked signal.
- MultipathIndicator - A value indicating the 'multipath' state of the event.
- ConstellationType - GNSS constellation type. The mapping to human-readable values is provided in the metadata/constellation_type_mapping.csv file.
- CodeType - The GNSS measurement's code type. Only available in recent logs.
- ChipsetElapsedRealtimeNanos - The elapsed real-time of this clock since system boot, in nanoseconds. Only available in recent logs.
- ArrivalTimeNanosSinceGpsEpoch - An integer number of nanoseconds since the GPS epoch (1980/1/6 midnight UTC). Its value equals round((Raw::TimeNanos - Raw::FullBiasNanos), for each unique epoch described in the Raw sentences.
- RawPseudorangeMeters - Raw pseudorange in meters. It is the product between the speed of light and the time difference from the signal transmission time (receivedSvTimeInGpsNanos) to the signal arrival time (Raw::TimeNanos - Raw;;BiasNanos). Its uncertainty can be approximated by the product between the speed of light and the ReceivedSvTimeUncertaintyNanos.
- SignalType - The GNSS signal type is a combination of the constellation name and the frequency band. Common signal types measured by smartphones include GPS_L1, GPS_L5, GAL_E1, GAL_E5A, GLO_G1, BDS_B1I, BDS_B1C, BDS_B2A, QZS_J1, and QZS_J5.
- ReceivedSvTimeNanosSinceGpsEpoch - The signal transmission time received by the chipset, in the numbers of nanoseconds since the GPS epoch. Converted from ReceivedSvTimeNanos, this derived value is in a unified time scale for all constellations, while ReceivedSvTimeNanos refers to the time of day for GLONASS and the time of week for non-GLONASS constellations.
- SvPosition[X/Y/Z]EcefMeters - The satellite position (meters) in an ECEF coordinate frame at best estimate of “true signal transmission time” defined as ttx = receivedSvTimeInGpsNanos - satClkBiasNanos (defined below). They are computed with the satellite broadcast ephemeris, and have ~1-meter error with respect to the true satellite position.
- Sv[Elevation/Azimuth]Degrees - The elevation and azimuth in degrees of the satellite. They are computed using the WLS estimated user position.
- SvVelocity[X/Y/Z]EcefMetersPerSecond - The satellite velocity (meters per second) in an ECEF coordinate frame at best estimate of “true signal transmission time” ttx. They are computed with the satellite broadcast ephemeris, with this algorithm.
- SvClockBiasMeters - The satellite time correction combined with the satellite hardware delay in meters at the signal transmission time (receivedSvTimeInGpsNanos). Its time equivalent is termed as satClkBiasNanos. satClkBiasNanos equals the satelliteTimeCorrection minus the satelliteHardwareDelay. As defined in IS-GPS-200H Section 20.3.3.3.3.1, satelliteTimeCorrection is calculated from ∆tsv = af0 + af1(t - toc) + af2(t - toc)2 + ∆tr, while satelliteHardwareDelay is defined in Section 20.3.3.3.3.2. Parameters in the equations above are provided on the satellite broadcast ephemeris.
- SvClockDriftMetersPerSecond - The satellite clock drift in meters per second at the signal transmission time (receivedSvTimeInGpsNanos). It equals the difference of the satellite clock biases at t+0.5s and t-0.5s.
- IsrbMeters - The Inter-Signal Range Bias (ISRB) in meters from a non-GPS-L1 signal to GPS-L1 signals. For example, when the isrbM of GPS L5 is 1000m, it implies that a GPS L5 pseudorange is 1000m longer than the GPS L1 pseudorange transmitted by the same GPS satellite. It's zero for GPS-L1 signals. ISRB is introduced in the GPS chipset level and estimated as a state in the Weighted Least Squares engine.
- IonosphericDelayMeters - The ionospheric delay in meters, estimated with the Klobuchar model.
- TroposphericDelayMeters - The tropospheric delay in meters, estimated with the EGNOS model by Nigel Penna, Alan Dodson and W. Chen (2001).
- WlsPositionXEcefMeters - WlsPositionYEcefMeters,WlsPositionZEcefMeters: User positions in ECEF estimated by a Weighted-Least-Square (WLS) solver.

[train/test]/[drive_id]/[phone_name]/device_imu.csv - Readings from the phone's accelerometer, gyroscope, and magnetometer.

- MessageType - which of the three instruments the row's data is from.
- utcTimeMillis - The sum of elapsedRealtimeNanos below and the estimated device boot time at UTC, after a recent NTP (Network Time Protocol) sync.
- Measurement[X/Y/Z] - [x/y/z]_uncalib without bias compensation.
- Bias[X/Y/Z]MicroT - Estimated [x/y/z]_bias. Null in datasets collected in earlier dates.

[train/test]/[drive_id]/[phone_name]/supplemental/rinex.o - A text file of GNSS measurements collected from Android APIs (same as the "Raw" messages above), converted to the RINEX v3.03 format.

[train/test]/[drive_id]/[phone_name]/supplemental/gnss_log.txt - The phone's logs as generated by the GnssLogger App. This notebook demonstrates how to parse the logs. Each gnss file contains several sub-datasets, each of which is detailed below:

Raw - The raw GNSS measurements of one GNSS signal (each satellite may have 1-2 signals for L5-enabled smartphones), collected from the Android API GnssMeasurement.

- utcTimeMillis - Milliseconds since UTC epoch (1970/1/1), converted from GnssClock.
- TimeNanos - The GNSS receiver internal hardware clock value in nanoseconds.
- LeapSecond - The leap second associated with the clock's time.
- TimeUncertaintyNanos - The clock's time uncertainty (1-sigma) in nanoseconds.
- FullBiasNanos - The difference between hardware clock getTimeNanos() inside GPS receiver and the true GPS time since 0000Z, January 6, 1980, in nanoseconds.
- BiasNanos - The clock's sub-nanosecond bias.
- BiasUncertaintyNanos - The clock's bias uncertainty (1-sigma) in nanoseconds.
- DriftNanosPerSecond - The clock's drift in nanoseconds per second.
- DriftUncertaintyNanosPerSecond - The clock's drift uncertainty (1-sigma) in nanoseconds per second.
- HardwareClockDiscontinuityCount - Count of hardware clock discontinuities.
- Svid - The satellite ID.
- TimeOffsetNanos - The time offset at which the measurement was taken in nanoseconds.
- State - Integer signifying sync state of the satellite. Each bit in the integer attributes to a particular state information of the measurement. See the metadata/raw_state_bit_map.json file for the mapping between bits and states.
- ReceivedSvTimeNanos - The received GNSS satellite time, at the measurement time, in nanoseconds.
- ReceivedSvTimeUncertaintyNanos - The error estimate (1-sigma) for the received GNSS time, in nanoseconds.
- Cn0DbHz - The carrier-to-noise density in dB-Hz.
- PseudorangeRateMetersPerSecond - The pseudorange rate at the timestamp in m/s.
- PseudorangeRateUncertaintyMetersPerSecond - The pseudorange's rate uncertainty (1-sigma) in m/s.
- AccumulatedDeltaRangeState - This indicates the state of the 'Accumulated Delta Range' measurement. Each bit in the integer attributes to state of the measurement. See the metadata/accumulated_delta_range_state_bit_map.json file for the mapping between bits and states.
- AccumulatedDeltaRangeMeters - The accumulated delta range since the last channel reset, in meters.
- AccumulatedDeltaRangeUncertaintyMeters - The accumulated delta range's uncertainty (1-sigma) in meters.
- CarrierFrequencyHz - The carrier frequency of the tracked signal.
- CarrierCycles - The number of full carrier cycles between the satellite and the receiver. Null in these datasets.
- CarrierPhase - The RF phase detected by the receiver. Null in these datasets.
- CarrierPhaseUncertainty - The carrier-phase's uncertainty (1-sigma). Null in these datasets.
- MultipathIndicator - A value indicating the 'multipath' state of the event.
- SnrInDb - The (post-correlation & integration) Signal-to-Noise ratio (SNR) in dB.
- ConstellationType - GNSS constellation type. It's an integer number, whose mapping to string value is provided in the constellation_type_mapping.csv file.
- AgcDb - The Automatic Gain Control level in dB.
- BasebandCn0DbHz - The baseband carrier-to-noise density in dB-Hz. Only available in Android 11.
- FullInterSignalBiasNanos - The GNSS measurement's inter-signal bias in nanoseconds with sub-nanosecond accuracy. Only available in Pixel 5 logs in 2021. Only available in Android 11.
- FullInterSignalBiasUncertaintyNanos - The GNSS measurement's inter-signal bias uncertainty (1 sigma) in nanoseconds with sub-nanosecond accuracy. Only available in Android 11.
- SatelliteInterSignalBiasNanos - The GNSS measurement's satellite inter-signal bias in nanoseconds with sub-nanosecond accuracy. Only available in Android 11.
- SatelliteInterSignalBiasUncertaintyNanos - The GNSS measurement's satellite inter-signal bias uncertainty (1 sigma) in nanoseconds with sub-nanosecond accuracy. Only available in Android 11.
- CodeType - The GNSS measurement's code type. Only available in recent logs.
- ChipsetElapsedRealtimeNanos - The elapsed real-time of this clock since system boot, in nanoseconds. Only available in recent logs.

Status - The status of a GNSS signal, as collected from the Android API GnssStatus.

- UnixTimeMillis - Milliseconds since UTC epoch (1970/1/1), reported from the last location changed by GPS provider.
- SignalCount - The total number of satellites in the satellite list.
- SignalIndex - The index of current signal.
- ConstellationType: The constellation type of the satellite at the specified index.
- Svid: The satellite ID.
- CarrierFrequencyHz: The carrier frequency of the signal tracked.
- Cn0DbHz: The carrier-to-noise density at the antenna of the satellite at the specified index in dB-Hz.
- AzimuthDegrees: The azimuth the satellite at the specified index.
- ElevationDegrees: The elevation of the satellite at the specified index.
- UsedInFix: Whether the satellite at the specified index was used in the calculation of the most recent position fix.
- HasAlmanacData: Whether the satellite at the specified index has almanac data.
- HasEphemerisData: Whether the satellite at the specified index has ephemeris data.
- BasebandCn0DbHz: The baseband carrier-to-noise density of the satellite at the specified index in dB-Hz.

OrientationDeg - Each row represents an estimated device orientation, collected from Android API SensorManager#getOrientation. This message is only available in logs collected since March 2021.

- utcTimeMillis - The sum of elapsedRealtimeNanos below and the estimated device boot time at UTC, after a recent NTP (Network Time Protocol) sync.
- elapsedRealtimeNanos - The time in nanoseconds at which the event happened.
- yawDeg - If the screen is in portrait mode, this value equals the Azimuth degree (modulus to 0°~360°). If the screen is in landscape mode, it equals the sum (modulus to 0°~360°) of the screen rotation angle (either 90° or 270°) and the Azimuth degree. Azimuth refers to the angle of rotation about the -z axis. This value represents the angle between the device's y axis and the magnetic north pole.
- rollDeg - Roll, angle of rotation about the y axis. This value represents the angle between a plane perpendicular to the device's screen and a plane perpendicular to the ground.
- pitchDeg - Pitch, angle of rotation about the x axis. This value represents the angle between a plane parallel to the device's screen and a plane parallel to the ground.

### Other Important Information

Participants are encouraged to explore advanced machine learning techniques to improve GNSS data accuracy, which could lead to significant advancements in navigation technology.