### Description

The IceCube Neutrino Challenge invites participants to predict the direction of neutrino particles detected by the IceCube observatory, located deep within the South Pole ice. By developing a model using this unique dataset, you can contribute to advancing our understanding of cosmic phenomena such as exploding stars, gamma-ray bursts, and the fundamental properties of neutrinos. 

Neutrinos are among the most abundant particles in the universe, yet their detection is challenging due to their nearly massless and electrically neutral nature. Accurate and rapid estimation of neutrino event directions is crucial for analyzing these particles and identifying cosmic sources. Current reconstruction methods face limitations, being either fast but inaccurate or accurate but computationally expensive. Your participation could enhance the speed and precision of neutrino event reconstruction, potentially enabling real-time analysis and collaboration with global telescope networks.

This is a Code Competition. Refer to Code Requirements for details.

### Evaluation

Submissions are evaluated using the mean angular error between the predicted and true event origins. See this notebook for a python copy of the metric.

## Submission File

For each event_id in the test set, you must predict the azimuth and zenith. The file should contain a header and have the following format:

```
event_id,azimuth,zenith
730,1,1
769,1,1
774,1,1
etc.
```

### Dataset Description

The competition focuses on identifying the direction from which neutrinos detected by the IceCube observatory originated. Quick localization of detection events allows traditional telescopes to investigate transient sources like supernovae or gamma-ray bursts. With an average of three thousand events processed per second, traditional methods struggle to keep pace. Participants are challenged to efficiently and accurately process a large volume of events.

The competition features a hidden test set, with approximately one million events divided into multiple batches, which will be revealed upon scoring your submitted notebook.

### Files

[train/test]_meta.parquet

- batch_id (int): the ID of the batch the event was placed into.
- event_id (int): the event ID.
- [first/last]_pulse_index (int): index of the first/last row in the features dataframe belonging to this event.
- [azimuth/zenith] (float32): the [azimuth/zenith] angle in radians of the neutrino. A value between 0 and 2*pi for the azimuth and 0 and pi for zenith. The target columns. Not provided for the test set. The direction vector represented by zenith and azimuth points to where the neutrino came from.
- NB: Other quantities regarding the event, such as the interaction point in x, y, z (vertex position), the neutrino energy, or the interaction type and kinematics are not included in the dataset.

[train/test]/batch_[n].parquet Each batch contains tens of thousands of events. Each event may contain thousands of pulses, each of which is the digitized output from a photomultiplier tube and occupies one row.

- event_id (int): the event ID. Saved as the index column in parquet.
- time (int): the time of the pulse in nanoseconds in the current event time window. The absolute time of a pulse has no relevance, and only the relative time with respect to other pulses within an event is of relevance.
- sensor_id (int): the ID of which of the 5160 IceCube photomultiplier sensors recorded this pulse.
- charge (float32): An estimate of the amount of light in the pulse, in units of photoelectrons (p.e.). A physical photon does not exactly result in a measurement of 1 p.e. but rather can take values spread around 1 p.e. As an example, a pulse with charge 2.7 p.e. could quite likely be the result of two or three photons hitting the photomultiplier tube around the same time. This data has float16 precision but is stored as float32 due to limitations of the version of pyarrow the data was prepared with.
- auxiliary (bool): If True, the pulse was not fully digitized, is of lower quality, and was more likely to originate from noise. If False, then this pulse was contributed to the trigger decision and the pulse was fully digitized.

sample_submission.parquet An example submission with the correct columns and properly ordered event IDs. The sample submission is provided in the parquet format so it can be read quickly but your final submission must be a csv.

sensor_geometry.csv The x, y, and z positions for each of the 5160 IceCube sensors. The row index corresponds to the sensor_idx feature of pulses. The x, y, and z coordinates are in units of meters, with the origin at the center of the IceCube detector. The coordinate system is right-handed, and the z-axis points upwards when standing at the South Pole. You can convert from these coordinates to azimuth and zenith with the following formulas (here the vector (x,y,z) is normalized):

```
x = cos(azimuth) * sin(zenith)
y = sin(azimuth) * sin(zenith)
z = cos(zenith)
```

### Other Important Information

This is a Code Competition, and submissions must be made through Notebooks. Ensure your notebook meets the following conditions for submission:

- CPU Notebook <= 9 hours run-time
- GPU Notebook <= 9 hours run-time
- Internet access disabled
- Freely & publicly available external data is allowed, including pre-trained models
- Submission file must be named submission.csv

Refer to the Code Competition FAQ for more information on submission processes and troubleshooting.